def countBases(text):
    # Create an empty hash table
    symbolCounts = {'A':0,'C':0, 'G':0, 'T':0}

    # Go over each letter in the sequence
    for x in xrange(len(text)):
        ch = text[x]
        # Increment count
        if (ch in symbolCounts):
            symbolCounts[ch] = symbolCounts[ch] + 1
        else:
            symbolCounts[ch] = 1

    A_count= symbolCounts['A']
    C_count= symbolCounts['C']
    G_count= symbolCounts['G']
    T_count= symbolCounts['T']
    
    space= ' '
    result = str(A_count) + space + str(C_count) + space + str(G_count) + space + str(T_count)

    # Return counts
    return (result)




string = 'CCGTTGCAGTTTGAACGGATTCCCGCGCACCGCGTCGATGGTAGCCTGTAGAAGCCTCGTAGTCCCAGATTGTTAAAGTAAGCTTGCTTATTACCGATTAGTACGTTCCGGGTGCTGGCCCATAAGGTGGGATACACGGACTTATGGCTGCGACATGTGACATTAGCCACACAGCCAGTGCTAAGGCTCTACTATAGTTAACAGAGACAAAACGAGACGTTGGGGGAGCACCCGAACACACCATCGAGCCCGAGCTGGGAAAACAGAGCACCTCTACAAGTGTAGTTACCAGTGACTAAAACTGACTTGCATCCCACAATTTATTACATCACGAGCCGCAGGCCGGTTTAGGACGTTCTACGTGTGTTTGTTTACCGGTATTTACCAACCGGGTGATGTTTCTTCCCGGCCTGGCAGTTCTGTTGCCGAAACTTACTTACAGTTTCTGCATTTCTAGAGGACCGATAGCTACTTGTCTCGCTCTTAGACTTGATTGAGTCAGAGCGATCGGTCTCCGCTCTCGCCATTCTGCTTCTAGGCCACAGCACCGCTCAGTACGCGGGGCCGACTTACTAAGCATCGTTGCACTCGCTGGATGCCTTTCAAGAAATCTAGGAAGTATAGCTTAGCCCTAGCGCGGAGGCGCGGTATAAGTGGGACCTTAGGCATATTTATTGGAAATAGTCATGCCGAACGGGCCAATTCGGCGAGATGATACACCTAAGAATGGACGAAAAAATGTGACACTACAGGATTATTGGCCATTACATGATATAGGCTCGGACGTTGTTGTTATCTTTTCGTAAACAAATTACCTATTGTGTCAGAGGCATGTCATGTAGACCTACTGCAACTCGCTGAAATTATGTCATTCCATCCTCT'
print countBases(string)